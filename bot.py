import os
import time
import random
import requests
import logging
from bs4 import BeautifulSoup
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124",
    "Content-Type": "application/x-www-form-urlencoded",
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Reels, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_text = update.message.text
    if "instagram.com" in message_text:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞: {message_text}")
        await update.message.reply_text("‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é...")

        try:
            # –ü–µ—Ä–≤—ã–π POST-–∑–∞–ø—Ä–æ—Å
            data = {"url": message_text}
            response = requests.post("https://iqsaved.com/ru/", headers=headers, data=data)
            logger.info(f"–ü–µ—Ä–≤—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}")
            if response.status_code != 200:
                raise Exception(f"–û—à–∏–±–∫–∞: {response.status_code}")

            # –ü–∞—Ä—Å–∏–Ω–≥ –∫–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å"
            soup = BeautifulSoup(response.text, "html.parser")
            download_button = soup.find("a", class_="button button__blue")
            if not download_button or not download_button.get("href"):
                logger.error("–ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                raise Exception("–ö–Ω–æ–ø–∫–∞ '–°–∫–∞—á–∞—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            video_url = download_button["href"]
            logger.info(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {video_url}")

            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
            await update.message.reply_text("üì• –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É...")
            video_response = requests.get(video_url, headers=headers, stream=True)
            if video_response.status_code != 200:
                logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {video_response.status_code}")
                raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {video_response.status_code}")
            
            video_path = "temp_video.mp4"
            with open(video_path, "wb") as f:
                for chunk in video_response.iter_content(8192):
                    f.write(chunk)

            # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            for i in range(1, 6):
                await update.message.reply_text(f"üì• {i * 20}%")
                time.sleep(0.5)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ
            logger.info("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ –≤ Telegram")
            with open(video_path, "rb") as video_file:
                await update.message.reply_video(video_file)
            os.remove(video_path)
            logger.info("–§–∞–π–ª —É–¥–∞–ª—ë–Ω")
            await update.message.reply_text("‚úÖ –ì–æ—Ç–æ–≤–æ!")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞: {str(e)}")
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        await update.message.reply_text("üîó –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Instagram!")

def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 5000)),
        url_path=TOKEN,
        webhook_url=f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}"
    )

if __name__ == "__main__":
    main()

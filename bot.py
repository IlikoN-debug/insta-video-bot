import os
import time
import instaloader
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–¥ –±—Ä–∞—É–∑–µ—Ä
headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Accept-Language": "en-US,en;q=0.9",
    "Referer": "https://www.instagram.com/",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
    "Upgrade-Insecure-Requests": "1",
}

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ Instagram.\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ–±—è! üé•"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ —Å—Å—ã–ª–∫–∞–º–∏
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_text = update.message.text
    if "instagram.com" in message_text:
        await update.message.reply_text("‚è≥ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")
        try:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Instaloader –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            L = instaloader.Instaloader(
                download_pictures=False,
                download_videos=True,
                download_video_thumbnails=False,
                download_geotags=False,
                download_comments=False,
                save_metadata=False
            )
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏
            L.context._session.headers.update(headers)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º shortcode –∏–∑ —Å—Å—ã–ª–∫–∏
            shortcode = message_text.split("/")[-2]
            post = instaloader.Post.from_shortcode(L.context, shortcode)
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å—Ç –≤ –ø–∞–ø–∫—É "downloads"
            L.download_post(post, target="downloads")
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            for i in range(1, 6):
                await update.message.reply_text(f"üì• –ó–∞–≥—Ä—É–∑–∫–∞: {i * 20}%")
                time.sleep(1)  # –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≥—Ä—É–∑–∫–∏
            
            # –ü–æ–∏—Å–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
            video_path = None
            for root, dirs, files in os.walk("downloads"):
                for file in files:
                    if file.endswith(".mp4"):
                        video_path = os.path.join(root, file)
                        with open(video_path, 'rb') as video_file:
                            await update.message.reply_video(video_file)
                        # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                        os.remove(video_path)
                        break
                if video_path:
                    break
            
            if video_path:
                await update.message.reply_text("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            else:
                await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –≤ –ø–æ—Å—Ç–µ.")
        
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        await update.message.reply_text("üîó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ Instagram!")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 5000)),
        url_path=TOKEN,
        webhook_url=f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}"
    )

if __name__ == "__main__":
    main()
